package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/jianqiu/vm-pool-server/models"
)

/*GetVmsOK successful operation

swagger:response getVmsOK
*/
type GetVmsOK struct {

	// In: body
	Payload []*models.VM `json:"body,omitempty"`
}

// NewGetVmsOK creates GetVmsOK with default headers values
func NewGetVmsOK() *GetVmsOK {
	return &GetVmsOK{}
}

// WithPayload adds the payload to the get vms o k response
func (o *GetVmsOK) WithPayload(payload []*models.VM) *GetVmsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get vms o k response
func (o *GetVmsOK) SetPayload(payload []*models.VM) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVmsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetVmsDefault Unexpected error

swagger:response getVmsDefault
*/
type GetVmsDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetVmsDefault creates GetVmsDefault with default headers values
func NewGetVmsDefault(code int) *GetVmsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetVmsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get vms default response
func (o *GetVmsDefault) WithStatusCode(code int) *GetVmsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get vms default response
func (o *GetVmsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get vms default response
func (o *GetVmsDefault) WithPayload(payload *models.Error) *GetVmsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get vms default response
func (o *GetVmsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVmsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
